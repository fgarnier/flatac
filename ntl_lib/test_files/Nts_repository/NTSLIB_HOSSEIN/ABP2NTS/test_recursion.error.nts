/*
Licensed under the MIT License.
Copyright (C) 2012 EPFL (Switzerland) , Verimag (France).

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
nts pgm;

// Global Decls
END_l1_prime_END, INIT_PC32_prime_END, INIT_PC33_prime_END, INIT_PC34_prime_END, INIT_PC35_prime_END, PC14, PC15, PC17, PC18, PC19, PC2, PC21, PC22, PC23, PC24, PC26, PC27, PC28, PC29, PC32, PC33, PC34, PC38, PC39, PC41, PC43, PC44, PC46, PC47, PC49, PC50, PC52, PC53, PC54, PC55, PC56, PC57, PC58, cX0, cX1, cX2, cX3, cmain, cpost_A_without_err, cpost_X4_without_err, cpost_Xf_with_err, cpost_Xf_without_err, l1, l2, l3, l4, main_without_err: int;
CNT_cpost_A, CNT_cpost_Xf, CNT_cpost_X4: int;
MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0: int;
MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0: int;

MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1: int;
MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1: int;

main {
b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0, res: int;
nxt_b0_val0_eq_0, nxt_b1_val1_eq_0, nxt_b2_val2_eq_0, nxt_b3_val3_eq_0: int;
initial si;
final sf;
error se;

si -> s0 { b0_val0_eq_0' >= 0 && b0_val0_eq_0' <= 1 && b1_val1_eq_0' >= 0 && b1_val1_eq_0' <= 1 && b2_val2_eq_0' >= 0 && b2_val2_eq_0' <= 1 && b3_val3_eq_0' >= 0 && b3_val3_eq_0' <= 1 &&  END_l1_prime_END' = 0 && INIT_PC32_prime_END' = 0 && INIT_PC33_prime_END' = 0 && INIT_PC34_prime_END' = 0 && INIT_PC35_prime_END' = 0 && PC14' = 0 && PC15' = 0 && PC17' = 0 && PC18' = 0 && PC19' = 0 && PC2' = 0 && PC21' = 0 && PC22' = 0 && PC23' = 0 && PC24' = 0 && PC26' = 0 && PC27' = 0 && PC28' = 0 && PC29' = 0 && PC32' = 0 && PC33' = 0 && PC34' = 0 && PC38' = 0 && PC39' = 0 && PC41' = 0 && PC43' = 0 && PC44' = 0 && PC46' = 0 && PC47' = 0 && PC49' = 0 && PC50' = 0 && PC52' = 0 && PC53' = 0 && PC54' = 0 && PC55' = 0 && PC56' = 0 && PC57' = 0 && PC58' = 0 && cX0' = 0 && cX1' = 0 && cX2' = 0 && cX3' = 0 && cmain' = 0 && cpost_A_without_err' = 0 && cpost_X4_without_err' = 0 && cpost_Xf_with_err' = 0 && cpost_Xf_without_err' = 0 && l1' = 0 && l2' = 0 && l3' = 0 && l4' = 0 && main_without_err' = 0 && CNT_cpost_A' = 0 && CNT_cpost_Xf' = 0 && CNT_cpost_X4' = 0 && havoc(b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0, END_l1_prime_END, INIT_PC32_prime_END, INIT_PC33_prime_END, INIT_PC34_prime_END, INIT_PC35_prime_END, PC14, PC15, PC17, PC18, PC19, PC2, PC21, PC22, PC23, PC24, PC26, PC27, PC28, PC29, PC32, PC33, PC34, PC38, PC39, PC41, PC43, PC44, PC46, PC47, PC49, PC50, PC52, PC53, PC54, PC55, PC56, PC57, PC58, cX0, cX1, cX2, cX3, cmain, cpost_A_without_err, cpost_X4_without_err, cpost_Xf_with_err, cpost_Xf_without_err, l1, l2, l3, l4, main_without_err, CNT_cpost_A, CNT_cpost_Xf, CNT_cpost_X4)}
s0 -> s1 { main_without_err' = main_without_err + 1 &&
       MI_b0_val0_eq_0__1' = b0_val0_eq_0 && MF_b0_val0_eq_0__1' = nxt_b0_val0_eq_0' && nxt_b0_val0_eq_0' >= 0 && nxt_b0_val0_eq_0' <= 1 && MI_b1_val1_eq_0__1' = b1_val1_eq_0 && MF_b1_val1_eq_0__1' = nxt_b1_val1_eq_0' && nxt_b1_val1_eq_0' >= 0 && nxt_b1_val1_eq_0' <= 1 && MI_b2_val2_eq_0__1' = b2_val2_eq_0 && MF_b2_val2_eq_0__1' = nxt_b2_val2_eq_0' && nxt_b2_val2_eq_0' >= 0 && nxt_b2_val2_eq_0' <= 1 && MI_b3_val3_eq_0__1' = b3_val3_eq_0 && MF_b3_val3_eq_0__1' = nxt_b3_val3_eq_0' && nxt_b3_val3_eq_0' >= 0 && nxt_b3_val3_eq_0' <= 1 && 
       havoc (main_without_err, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, nxt_b0_val0_eq_0, nxt_b1_val1_eq_0, nxt_b2_val2_eq_0, nxt_b3_val3_eq_0) }
s1 -> s2_1 { res' = traverse_main_without_err_1() && havoc(res) }
s2_1 -> eventloop { res = 1 && res' = 0 && b0_val0_eq_0' = nxt_b0_val0_eq_0 && b1_val1_eq_0' = nxt_b1_val1_eq_0 && b2_val2_eq_0' = nxt_b2_val2_eq_0 && b3_val3_eq_0' = nxt_b3_val3_eq_0 &&  havoc(res, b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0) }

eventloop -> sf { CNT_cpost_A = 0 && CNT_cpost_Xf = 0 && CNT_cpost_X4 = 0 && havoc() }
eventloop -> s3 { CNT_cpost_A >= 1 && CNT_cpost_A' = CNT_cpost_A - 1 && havoc(CNT_cpost_A) }

s3 -> s5 { cpost_A_without_err' = cpost_A_without_err + 1 &&
           MI_b0_val0_eq_0__1' = b0_val0_eq_0 && MF_b0_val0_eq_0__1' = nxt_b0_val0_eq_0' && nxt_b0_val0_eq_0' >= 0 && nxt_b0_val0_eq_0' <= 1 && MI_b1_val1_eq_0__1' = b1_val1_eq_0 && MF_b1_val1_eq_0__1' = nxt_b1_val1_eq_0' && nxt_b1_val1_eq_0' >= 0 && nxt_b1_val1_eq_0' <= 1 && MI_b2_val2_eq_0__1' = b2_val2_eq_0 && MF_b2_val2_eq_0__1' = nxt_b2_val2_eq_0' && nxt_b2_val2_eq_0' >= 0 && nxt_b2_val2_eq_0' <= 1 && MI_b3_val3_eq_0__1' = b3_val3_eq_0 && MF_b3_val3_eq_0__1' = nxt_b3_val3_eq_0' && nxt_b3_val3_eq_0' >= 0 && nxt_b3_val3_eq_0' <= 1 && 
           havoc(cpost_A_without_err, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, nxt_b0_val0_eq_0, nxt_b1_val1_eq_0, nxt_b2_val2_eq_0, nxt_b3_val3_eq_0) }

s5 -> s2_5 { res' = traverse_cpost_A_without_err_1() && havoc(res) }
s2_5 -> eventloop { b0_val0_eq_0' = nxt_b0_val0_eq_0 && b1_val1_eq_0' = nxt_b1_val1_eq_0 && b2_val2_eq_0' = nxt_b2_val2_eq_0 && b3_val3_eq_0' = nxt_b3_val3_eq_0 &&  havoc(b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0) }

eventloop -> s6 { CNT_cpost_Xf >= 1 && CNT_cpost_Xf' = CNT_cpost_Xf - 1 && havoc(CNT_cpost_Xf) }

s6 -> s7 { cpost_Xf_with_err' = cpost_Xf_with_err + 1 &&
           MI_b0_val0_eq_0__1' = b0_val0_eq_0 && MF_b0_val0_eq_0__1' = nxt_b0_val0_eq_0' && nxt_b0_val0_eq_0' >= 0 && nxt_b0_val0_eq_0' <= 1 && MI_b1_val1_eq_0__1' = b1_val1_eq_0 && MF_b1_val1_eq_0__1' = nxt_b1_val1_eq_0' && nxt_b1_val1_eq_0' >= 0 && nxt_b1_val1_eq_0' <= 1 && MI_b2_val2_eq_0__1' = b2_val2_eq_0 && MF_b2_val2_eq_0__1' = nxt_b2_val2_eq_0' && nxt_b2_val2_eq_0' >= 0 && nxt_b2_val2_eq_0' <= 1 && MI_b3_val3_eq_0__1' = b3_val3_eq_0 && MF_b3_val3_eq_0__1' = nxt_b3_val3_eq_0' && nxt_b3_val3_eq_0' >= 0 && nxt_b3_val3_eq_0' <= 1 && 
           havoc(cpost_Xf_with_err, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, nxt_b0_val0_eq_0, nxt_b1_val1_eq_0, nxt_b2_val2_eq_0, nxt_b3_val3_eq_0) }

s7 -> se_7 { res' = traverse_cpost_Xf_with_err_1() && havoc(res) }
se_7 -> se { res = 1 && res' = 0 && b0_val0_eq_0' = nxt_b0_val0_eq_0 && b1_val1_eq_0' = nxt_b1_val1_eq_0 && b2_val2_eq_0' = nxt_b2_val2_eq_0 && b3_val3_eq_0' = nxt_b3_val3_eq_0 &&  havoc(res, b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0) }

s6 -> s8 { cpost_Xf_without_err' = cpost_Xf_without_err + 1 &&
           MI_b0_val0_eq_0__1' = b0_val0_eq_0 && MF_b0_val0_eq_0__1' = nxt_b0_val0_eq_0' && nxt_b0_val0_eq_0' >= 0 && nxt_b0_val0_eq_0' <= 1 && MI_b1_val1_eq_0__1' = b1_val1_eq_0 && MF_b1_val1_eq_0__1' = nxt_b1_val1_eq_0' && nxt_b1_val1_eq_0' >= 0 && nxt_b1_val1_eq_0' <= 1 && MI_b2_val2_eq_0__1' = b2_val2_eq_0 && MF_b2_val2_eq_0__1' = nxt_b2_val2_eq_0' && nxt_b2_val2_eq_0' >= 0 && nxt_b2_val2_eq_0' <= 1 && MI_b3_val3_eq_0__1' = b3_val3_eq_0 && MF_b3_val3_eq_0__1' = nxt_b3_val3_eq_0' && nxt_b3_val3_eq_0' >= 0 && nxt_b3_val3_eq_0' <= 1 && 
           havoc(cpost_Xf_without_err, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, nxt_b0_val0_eq_0, nxt_b1_val1_eq_0, nxt_b2_val2_eq_0, nxt_b3_val3_eq_0) }

s8 -> s2_8 { res' = traverse_cpost_Xf_without_err_1() && havoc(res) }
s2_8 -> eventloop { b0_val0_eq_0' = nxt_b0_val0_eq_0 && b1_val1_eq_0' = nxt_b1_val1_eq_0 && b2_val2_eq_0' = nxt_b2_val2_eq_0 && b3_val3_eq_0' = nxt_b3_val3_eq_0 &&  havoc(b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0) }

eventloop -> s9 { CNT_cpost_X4 >= 1 && CNT_cpost_X4' = CNT_cpost_X4 - 1 && havoc(CNT_cpost_X4) }

s9 -> s11 { cpost_X4_without_err' = cpost_X4_without_err + 1 &&
           MI_b0_val0_eq_0__1' = b0_val0_eq_0 && MF_b0_val0_eq_0__1' = nxt_b0_val0_eq_0' && nxt_b0_val0_eq_0' >= 0 && nxt_b0_val0_eq_0' <= 1 && MI_b1_val1_eq_0__1' = b1_val1_eq_0 && MF_b1_val1_eq_0__1' = nxt_b1_val1_eq_0' && nxt_b1_val1_eq_0' >= 0 && nxt_b1_val1_eq_0' <= 1 && MI_b2_val2_eq_0__1' = b2_val2_eq_0 && MF_b2_val2_eq_0__1' = nxt_b2_val2_eq_0' && nxt_b2_val2_eq_0' >= 0 && nxt_b2_val2_eq_0' <= 1 && MI_b3_val3_eq_0__1' = b3_val3_eq_0 && MF_b3_val3_eq_0__1' = nxt_b3_val3_eq_0' && nxt_b3_val3_eq_0' >= 0 && nxt_b3_val3_eq_0' <= 1 && 
           havoc(cpost_X4_without_err, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, nxt_b0_val0_eq_0, nxt_b1_val1_eq_0, nxt_b2_val2_eq_0, nxt_b3_val3_eq_0) }

s11 -> s2_11 { res' = traverse_cpost_X4_without_err_1() && havoc(res) }
s2_11 -> eventloop { b0_val0_eq_0' = nxt_b0_val0_eq_0 && b1_val1_eq_0' = nxt_b1_val1_eq_0 && b2_val2_eq_0' = nxt_b2_val2_eq_0 && b3_val3_eq_0' = nxt_b3_val3_eq_0 &&  havoc(b0_val0_eq_0, b1_val1_eq_0, b2_val2_eq_0, b3_val3_eq_0) }

}

//----------------------------------
// Grammar of main_without_err
// <PC2> -> 'e'
// <PC52> -> 'b1_val1_eq_0 := T' <PC53>
// <PC53> -> 'b2_val2_eq_0 := T' <PC54>
// <PC54> -> 'b3_val3_eq_0 := T' <PC55>
// <PC55> -> 'cpost_X4' <PC56>
// <PC56> -> 'cpost_Xf' <PC57>
// <PC57> -> 'assert (T)' <PC58>
// <PC58> -> 'e'
// <cmain> -> 'b0_val0_eq_0 := T' <PC52>
// <main_without_err> -> <cmain> <PC2>
//----------------------------------
traverse_main_without_err_0 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC2 >= 1 && havoc() }
si -> p1 { PC52 >= 1 && havoc() }
si -> p2 { PC53 >= 1 && havoc() }
si -> p3 { PC54 >= 1 && havoc() }
si -> p4 { PC55 >= 1 && havoc() }
si -> p5 { PC56 >= 1 && havoc() }
si -> p6 { PC57 >= 1 && havoc() }
si -> p7 { PC58 >= 1 && havoc() }
si -> p8 { cmain >= 1 && havoc() }
si -> p9 { main_without_err >= 1 && havoc() }


// <PC2> -> 'e'
p0 -> sf { PC2' = PC2 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC2, done) }

// <PC52> -> 'b1_val1_eq_0 := T' <PC53>
p1 -> si { MI_b1_val1_eq_0__0' = 1 && PC52' = PC52 - 1 && PC53' = PC53 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC52, PC53) }

// <PC53> -> 'b2_val2_eq_0 := T' <PC54>
p2 -> si { MI_b2_val2_eq_0__0' = 1 && PC53' = PC53 - 1 && PC54' = PC54 + 1 &&
        havoc(MI_b2_val2_eq_0__0, PC53, PC54) }

// <PC54> -> 'b3_val3_eq_0 := T' <PC55>
p3 -> si { MI_b3_val3_eq_0__0' = 1 && PC54' = PC54 - 1 && PC55' = PC55 + 1 &&
        havoc(MI_b3_val3_eq_0__0, PC54, PC55) }

// <PC55> -> 'cpost_X4' <PC56>
p4 -> si { CNT_cpost_X4' = CNT_cpost_X4 + 1  && PC55' = PC55 - 1 && PC56' = PC56 + 1 &&
        havoc(CNT_cpost_X4, PC55, PC56) }

// <PC56> -> 'cpost_Xf' <PC57>
p5 -> si { CNT_cpost_Xf' = CNT_cpost_Xf + 1  && PC56' = PC56 - 1 && PC57' = PC57 + 1 &&
        havoc(CNT_cpost_Xf, PC56, PC57) }

// <PC57> -> 'assert (T)' <PC58>
p6 -> si { 1 = 1 && PC57' = PC57 - 1 && PC58' = PC58 + 1 &&
        havoc(PC57, PC58) }

// <PC58> -> 'e'
p7 -> sf { PC58' = PC58 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC58, done) }

// <cmain> -> 'b0_val0_eq_0 := T' <PC52>
p8 -> si { MI_b0_val0_eq_0__0' = 1 && cmain' = cmain - 1 && PC52' = PC52 + 1 &&
        havoc(MI_b0_val0_eq_0__0, cmain, PC52) }

// <main_without_err> -> <cmain> <PC2> 
p9 -> p9_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        main_without_err' = main_without_err - 1 && PC2' = PC2 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  main_without_err, PC2) }

p9_0 -> si9_0 { res' = 1 && havoc(res) }

si9_0 -> si { res = 1 && res' = 0 && cmain' = cmain + 1 && 
        havoc(res, cmain) }

p9 -> p9_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        main_without_err' = main_without_err - 1 && cmain' = cmain + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  main_without_err, cmain) }

p9_1 -> si9_1 { res' = 1 &&  havoc(res) }

si9_1 -> si { res = 1 && res' = 0 && PC2' = PC2 + 1 &&
        havoc(res, PC2) }


}

//----------------------------------
// Grammar of main_without_err
// <PC2> -> 'e'
// <PC52> -> 'b1_val1_eq_0 := T' <PC53>
// <PC53> -> 'b2_val2_eq_0 := T' <PC54>
// <PC54> -> 'b3_val3_eq_0 := T' <PC55>
// <PC55> -> 'cpost_X4' <PC56>
// <PC56> -> 'cpost_Xf' <PC57>
// <PC57> -> 'assert (T)' <PC58>
// <PC58> -> 'e'
// <cmain> -> 'b0_val0_eq_0 := T' <PC52>
// <main_without_err> -> <cmain> <PC2>
//----------------------------------
traverse_main_without_err_1 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC2 >= 1 && havoc() }
si -> p1 { PC52 >= 1 && havoc() }
si -> p2 { PC53 >= 1 && havoc() }
si -> p3 { PC54 >= 1 && havoc() }
si -> p4 { PC55 >= 1 && havoc() }
si -> p5 { PC56 >= 1 && havoc() }
si -> p6 { PC57 >= 1 && havoc() }
si -> p7 { PC58 >= 1 && havoc() }
si -> p8 { cmain >= 1 && havoc() }
si -> p9 { main_without_err >= 1 && havoc() }


// <PC2> -> 'e'
p0 -> sf { PC2' = PC2 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC2, done) }

// <PC52> -> 'b1_val1_eq_0 := T' <PC53>
p1 -> si { MI_b1_val1_eq_0__1' = 1 && PC52' = PC52 - 1 && PC53' = PC53 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC52, PC53) }

// <PC53> -> 'b2_val2_eq_0 := T' <PC54>
p2 -> si { MI_b2_val2_eq_0__1' = 1 && PC53' = PC53 - 1 && PC54' = PC54 + 1 &&
        havoc(MI_b2_val2_eq_0__1, PC53, PC54) }

// <PC54> -> 'b3_val3_eq_0 := T' <PC55>
p3 -> si { MI_b3_val3_eq_0__1' = 1 && PC54' = PC54 - 1 && PC55' = PC55 + 1 &&
        havoc(MI_b3_val3_eq_0__1, PC54, PC55) }

// <PC55> -> 'cpost_X4' <PC56>
p4 -> si { CNT_cpost_X4' = CNT_cpost_X4 + 1  && PC55' = PC55 - 1 && PC56' = PC56 + 1 &&
        havoc(CNT_cpost_X4, PC55, PC56) }

// <PC56> -> 'cpost_Xf' <PC57>
p5 -> si { CNT_cpost_Xf' = CNT_cpost_Xf + 1  && PC56' = PC56 - 1 && PC57' = PC57 + 1 &&
        havoc(CNT_cpost_Xf, PC56, PC57) }

// <PC57> -> 'assert (T)' <PC58>
p6 -> si { 1 = 1 && PC57' = PC57 - 1 && PC58' = PC58 + 1 &&
        havoc(PC57, PC58) }

// <PC58> -> 'e'
p7 -> sf { PC58' = PC58 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC58, done) }

// <cmain> -> 'b0_val0_eq_0 := T' <PC52>
p8 -> si { MI_b0_val0_eq_0__1' = 1 && cmain' = cmain - 1 && PC52' = PC52 + 1 &&
        havoc(MI_b0_val0_eq_0__1, cmain, PC52) }

// <main_without_err> -> <cmain> <PC2> 
p9 -> p9_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        main_without_err' = main_without_err - 1 && PC2' = PC2 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  main_without_err, PC2) }

p9_0 -> si9_0 { res' = traverse_main_without_err_0() && havoc(res) }

si9_0 -> si { res = 1 && res' = 0 && cmain' = cmain + 1 && 
        havoc(res, cmain) }

p9 -> p9_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        main_without_err' = main_without_err - 1 && cmain' = cmain + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  main_without_err, cmain) }

p9_1 -> si9_1 { res' = traverse_main_without_err_0() &&  havoc(res) }

si9_1 -> si { res = 1 && res' = 0 && PC2' = PC2 + 1 &&
        havoc(res, PC2) }


}

//----------------------------------
// Grammar of cpost_A_without_err
// <PC14> -> 'b0_val0_eq_0 := F' <PC15>
// <PC15> -> 'e'
// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
// <PC19> -> 'e'
// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
// <PC24> -> 'e'
// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
// <PC29> -> 'b2_val2_eq_0 := T' <l4>
// <cpost_A_without_err> -> 'assert(!b0_val0_eq_0)' <l1>
// <cpost_A_without_err> -> 'assert(b0_val0_eq_0)' <PC14>
// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
// <l1> -> 'e'
// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
// <l4> -> 'e'
//----------------------------------
traverse_cpost_A_without_err_0 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC14 >= 1 && havoc() }
si -> p1 { PC15 >= 1 && havoc() }
si -> p2 { PC17 >= 1 && havoc() }
si -> p3 { PC18 >= 1 && havoc() }
si -> p4 { PC19 >= 1 && havoc() }
si -> p5 { PC21 >= 1 && havoc() }
si -> p6 { PC22 >= 1 && havoc() }
si -> p7 { PC23 >= 1 && havoc() }
si -> p8 { PC24 >= 1 && havoc() }
si -> p9 { PC26 >= 1 && havoc() }
si -> p10 { PC27 >= 1 && havoc() }
si -> p11 { PC28 >= 1 && havoc() }
si -> p12 { PC29 >= 1 && havoc() }
si -> p13 { cpost_A_without_err >= 1 && havoc() }
si -> p14 { l1 >= 1 && havoc() }
si -> p15 { l2 >= 1 && havoc() }
si -> p16 { l3 >= 1 && havoc() }
si -> p17 { l4 >= 1 && havoc() }


// <PC14> -> 'b0_val0_eq_0 := F' <PC15>
p0 -> si { MI_b0_val0_eq_0__0' = 0 && PC14' = PC14 - 1 && PC15' = PC15 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC14, PC15) }

// <PC15> -> 'e'
p1 -> sf { PC15' = PC15 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC15, done) }

// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
p2 -> si { MI_b1_val1_eq_0__0' = 0 && PC17' = PC17 - 1 && PC18' = PC18 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC17, PC18) }

// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
p3 -> si { MI_b0_val0_eq_0__0' = 1 && PC18' = PC18 - 1 && PC19' = PC19 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC18, PC19) }

// <PC19> -> 'e'
p4 -> sf { PC19' = PC19 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC19, done) }

// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
p5 -> si { MI_b2_val2_eq_0__0' = 0 && PC21' = PC21 - 1 && PC22' = PC22 + 1 &&
        havoc(MI_b2_val2_eq_0__0, PC21, PC22) }

// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
p6 -> si { MI_b0_val0_eq_0__0' = 1 && PC22' = PC22 - 1 && PC23' = PC23 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC22, PC23) }

// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
p7 -> si { MI_b1_val1_eq_0__0' = 1 && PC23' = PC23 - 1 && PC24' = PC24 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC23, PC24) }

// <PC24> -> 'e'
p8 -> sf { PC24' = PC24 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC24, done) }

// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
p9 -> si { MI_b3_val3_eq_0__0' = 0 && PC26' = PC26 - 1 && PC27' = PC27 + 1 &&
        havoc(MI_b3_val3_eq_0__0, PC26, PC27) }

// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
p10 -> si { MI_b0_val0_eq_0__0' = 1 && PC27' = PC27 - 1 && PC28' = PC28 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC27, PC28) }

// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
p11 -> si { MI_b1_val1_eq_0__0' = 1 && PC28' = PC28 - 1 && PC29' = PC29 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC28, PC29) }

// <PC29> -> 'b2_val2_eq_0 := T' <l4>
p12 -> si { MI_b2_val2_eq_0__0' = 1 && PC29' = PC29 - 1 && l4' = l4 + 1 &&
        havoc(MI_b2_val2_eq_0__0, PC29, l4) }

// <cpost_A_without_err> -> 'assert(!b0_val0_eq_0)' <l1>
p13 -> si { MI_b0_val0_eq_0__0 = 0 && cpost_A_without_err' = cpost_A_without_err - 1 && l1' = l1 + 1 &&
        havoc(cpost_A_without_err, l1) }

// <cpost_A_without_err> -> 'assert(b0_val0_eq_0)' <PC14>
p13 -> si { MI_b0_val0_eq_0__0 = 1 && cpost_A_without_err' = cpost_A_without_err - 1 && PC14' = PC14 + 1 &&
        havoc(cpost_A_without_err, PC14) }

// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
p14 -> si { MI_b1_val1_eq_0__0 = 0 && l1' = l1 - 1 && l2' = l2 + 1 &&
        havoc(l1, l2) }

// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
p14 -> si { MI_b1_val1_eq_0__0 = 1 && l1' = l1 - 1 && PC17' = PC17 + 1 &&
        havoc(l1, PC17) }

// <l1> -> 'e'
p14 -> sf { l1' = l1 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(l1, done) }

// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
p15 -> si { MI_b2_val2_eq_0__0 = 0 && l2' = l2 - 1 && l3' = l3 + 1 &&
        havoc(l2, l3) }

// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
p15 -> si { MI_b2_val2_eq_0__0 = 1 && l2' = l2 - 1 && PC21' = PC21 + 1 &&
        havoc(l2, PC21) }

// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
p16 -> si { MI_b3_val3_eq_0__0 = 0 && l3' = l3 - 1 && l4' = l4 + 1 &&
        havoc(l3, l4) }

// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
p16 -> si { MI_b3_val3_eq_0__0 = 1 && l3' = l3 - 1 && PC26' = PC26 + 1 &&
        havoc(l3, PC26) }

// <l4> -> 'e'
p17 -> sf { l4' = l4 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(l4, done) }


}

//----------------------------------
// Grammar of cpost_A_without_err
// <PC14> -> 'b0_val0_eq_0 := F' <PC15>
// <PC15> -> 'e'
// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
// <PC19> -> 'e'
// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
// <PC24> -> 'e'
// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
// <PC29> -> 'b2_val2_eq_0 := T' <l4>
// <cpost_A_without_err> -> 'assert(!b0_val0_eq_0)' <l1>
// <cpost_A_without_err> -> 'assert(b0_val0_eq_0)' <PC14>
// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
// <l1> -> 'e'
// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
// <l4> -> 'e'
//----------------------------------
traverse_cpost_A_without_err_1 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC14 >= 1 && havoc() }
si -> p1 { PC15 >= 1 && havoc() }
si -> p2 { PC17 >= 1 && havoc() }
si -> p3 { PC18 >= 1 && havoc() }
si -> p4 { PC19 >= 1 && havoc() }
si -> p5 { PC21 >= 1 && havoc() }
si -> p6 { PC22 >= 1 && havoc() }
si -> p7 { PC23 >= 1 && havoc() }
si -> p8 { PC24 >= 1 && havoc() }
si -> p9 { PC26 >= 1 && havoc() }
si -> p10 { PC27 >= 1 && havoc() }
si -> p11 { PC28 >= 1 && havoc() }
si -> p12 { PC29 >= 1 && havoc() }
si -> p13 { cpost_A_without_err >= 1 && havoc() }
si -> p14 { l1 >= 1 && havoc() }
si -> p15 { l2 >= 1 && havoc() }
si -> p16 { l3 >= 1 && havoc() }
si -> p17 { l4 >= 1 && havoc() }


// <PC14> -> 'b0_val0_eq_0 := F' <PC15>
p0 -> si { MI_b0_val0_eq_0__1' = 0 && PC14' = PC14 - 1 && PC15' = PC15 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC14, PC15) }

// <PC15> -> 'e'
p1 -> sf { PC15' = PC15 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC15, done) }

// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
p2 -> si { MI_b1_val1_eq_0__1' = 0 && PC17' = PC17 - 1 && PC18' = PC18 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC17, PC18) }

// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
p3 -> si { MI_b0_val0_eq_0__1' = 1 && PC18' = PC18 - 1 && PC19' = PC19 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC18, PC19) }

// <PC19> -> 'e'
p4 -> sf { PC19' = PC19 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC19, done) }

// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
p5 -> si { MI_b2_val2_eq_0__1' = 0 && PC21' = PC21 - 1 && PC22' = PC22 + 1 &&
        havoc(MI_b2_val2_eq_0__1, PC21, PC22) }

// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
p6 -> si { MI_b0_val0_eq_0__1' = 1 && PC22' = PC22 - 1 && PC23' = PC23 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC22, PC23) }

// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
p7 -> si { MI_b1_val1_eq_0__1' = 1 && PC23' = PC23 - 1 && PC24' = PC24 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC23, PC24) }

// <PC24> -> 'e'
p8 -> sf { PC24' = PC24 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC24, done) }

// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
p9 -> si { MI_b3_val3_eq_0__1' = 0 && PC26' = PC26 - 1 && PC27' = PC27 + 1 &&
        havoc(MI_b3_val3_eq_0__1, PC26, PC27) }

// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
p10 -> si { MI_b0_val0_eq_0__1' = 1 && PC27' = PC27 - 1 && PC28' = PC28 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC27, PC28) }

// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
p11 -> si { MI_b1_val1_eq_0__1' = 1 && PC28' = PC28 - 1 && PC29' = PC29 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC28, PC29) }

// <PC29> -> 'b2_val2_eq_0 := T' <l4>
p12 -> si { MI_b2_val2_eq_0__1' = 1 && PC29' = PC29 - 1 && l4' = l4 + 1 &&
        havoc(MI_b2_val2_eq_0__1, PC29, l4) }

// <cpost_A_without_err> -> 'assert(!b0_val0_eq_0)' <l1>
p13 -> si { MI_b0_val0_eq_0__1 = 0 && cpost_A_without_err' = cpost_A_without_err - 1 && l1' = l1 + 1 &&
        havoc(cpost_A_without_err, l1) }

// <cpost_A_without_err> -> 'assert(b0_val0_eq_0)' <PC14>
p13 -> si { MI_b0_val0_eq_0__1 = 1 && cpost_A_without_err' = cpost_A_without_err - 1 && PC14' = PC14 + 1 &&
        havoc(cpost_A_without_err, PC14) }

// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
p14 -> si { MI_b1_val1_eq_0__1 = 0 && l1' = l1 - 1 && l2' = l2 + 1 &&
        havoc(l1, l2) }

// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
p14 -> si { MI_b1_val1_eq_0__1 = 1 && l1' = l1 - 1 && PC17' = PC17 + 1 &&
        havoc(l1, PC17) }

// <l1> -> 'e'
p14 -> sf { l1' = l1 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(l1, done) }

// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
p15 -> si { MI_b2_val2_eq_0__1 = 0 && l2' = l2 - 1 && l3' = l3 + 1 &&
        havoc(l2, l3) }

// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
p15 -> si { MI_b2_val2_eq_0__1 = 1 && l2' = l2 - 1 && PC21' = PC21 + 1 &&
        havoc(l2, PC21) }

// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
p16 -> si { MI_b3_val3_eq_0__1 = 0 && l3' = l3 - 1 && l4' = l4 + 1 &&
        havoc(l3, l4) }

// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
p16 -> si { MI_b3_val3_eq_0__1 = 1 && l3' = l3 - 1 && PC26' = PC26 + 1 &&
        havoc(l3, PC26) }

// <l4> -> 'e'
p17 -> sf { l4' = l4 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(l4, done) }


}

//----------------------------------
// Grammar of cpost_Xf_with_err
// <END_l1_prime_END> -> 'e'
// <INIT_PC32_prime_END> -> 'assert(!b2_val2_eq_0)' <INIT_PC33_prime_END>
// <INIT_PC33_prime_END> -> 'assert(!b1_val1_eq_0)' <INIT_PC34_prime_END>
// <INIT_PC34_prime_END> -> 'assert(!b0_val0_eq_0)' <INIT_PC35_prime_END>
// <INIT_PC35_prime_END> -> 'assert (F)'
// <INIT_PC35_prime_END> -> 'assert (F)' <END_l1_prime_END>
// <cpost_Xf_with_err> -> 'assert(!b3_val3_eq_0)' <INIT_PC32_prime_END>
//----------------------------------
traverse_cpost_Xf_with_err_0 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { END_l1_prime_END >= 1 && havoc() }
si -> p1 { INIT_PC32_prime_END >= 1 && havoc() }
si -> p2 { INIT_PC33_prime_END >= 1 && havoc() }
si -> p3 { INIT_PC34_prime_END >= 1 && havoc() }
si -> p4 { INIT_PC35_prime_END >= 1 && havoc() }
si -> p5 { cpost_Xf_with_err >= 1 && havoc() }


// <END_l1_prime_END> -> 'e'
p0 -> sf { END_l1_prime_END' = END_l1_prime_END - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(END_l1_prime_END, done) }

// <INIT_PC32_prime_END> -> 'assert(!b2_val2_eq_0)' <INIT_PC33_prime_END>
p1 -> si { MI_b2_val2_eq_0__0 = 0 && INIT_PC32_prime_END' = INIT_PC32_prime_END - 1 && INIT_PC33_prime_END' = INIT_PC33_prime_END + 1 &&
        havoc(INIT_PC32_prime_END, INIT_PC33_prime_END) }

// <INIT_PC33_prime_END> -> 'assert(!b1_val1_eq_0)' <INIT_PC34_prime_END>
p2 -> si { MI_b1_val1_eq_0__0 = 0 && INIT_PC33_prime_END' = INIT_PC33_prime_END - 1 && INIT_PC34_prime_END' = INIT_PC34_prime_END + 1 &&
        havoc(INIT_PC33_prime_END, INIT_PC34_prime_END) }

// <INIT_PC34_prime_END> -> 'assert(!b0_val0_eq_0)' <INIT_PC35_prime_END>
p3 -> si { MI_b0_val0_eq_0__0 = 0 && INIT_PC34_prime_END' = INIT_PC34_prime_END - 1 && INIT_PC35_prime_END' = INIT_PC35_prime_END + 1 &&
        havoc(INIT_PC34_prime_END, INIT_PC35_prime_END) }

// <INIT_PC35_prime_END> -> 'assert (F)'
p4 -> sf { 1 = 1 && INIT_PC35_prime_END' = INIT_PC35_prime_END - 1 && done' = 1 &&
        MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
        havoc(INIT_PC35_prime_END, done) }

// <INIT_PC35_prime_END> -> 'assert (F)' <END_l1_prime_END>
p4 -> si { 1 = 1 && INIT_PC35_prime_END' = INIT_PC35_prime_END - 1 && END_l1_prime_END' = END_l1_prime_END + 1 &&
        havoc(INIT_PC35_prime_END, END_l1_prime_END) }

// <cpost_Xf_with_err> -> 'assert(!b3_val3_eq_0)' <INIT_PC32_prime_END>
p5 -> si { MI_b3_val3_eq_0__0 = 0 && cpost_Xf_with_err' = cpost_Xf_with_err - 1 && INIT_PC32_prime_END' = INIT_PC32_prime_END + 1 &&
        havoc(cpost_Xf_with_err, INIT_PC32_prime_END) }


}

//----------------------------------
// Grammar of cpost_Xf_with_err
// <END_l1_prime_END> -> 'e'
// <INIT_PC32_prime_END> -> 'assert(!b2_val2_eq_0)' <INIT_PC33_prime_END>
// <INIT_PC33_prime_END> -> 'assert(!b1_val1_eq_0)' <INIT_PC34_prime_END>
// <INIT_PC34_prime_END> -> 'assert(!b0_val0_eq_0)' <INIT_PC35_prime_END>
// <INIT_PC35_prime_END> -> 'assert (F)'
// <INIT_PC35_prime_END> -> 'assert (F)' <END_l1_prime_END>
// <cpost_Xf_with_err> -> 'assert(!b3_val3_eq_0)' <INIT_PC32_prime_END>
//----------------------------------
traverse_cpost_Xf_with_err_1 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { END_l1_prime_END >= 1 && havoc() }
si -> p1 { INIT_PC32_prime_END >= 1 && havoc() }
si -> p2 { INIT_PC33_prime_END >= 1 && havoc() }
si -> p3 { INIT_PC34_prime_END >= 1 && havoc() }
si -> p4 { INIT_PC35_prime_END >= 1 && havoc() }
si -> p5 { cpost_Xf_with_err >= 1 && havoc() }


// <END_l1_prime_END> -> 'e'
p0 -> sf { END_l1_prime_END' = END_l1_prime_END - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(END_l1_prime_END, done) }

// <INIT_PC32_prime_END> -> 'assert(!b2_val2_eq_0)' <INIT_PC33_prime_END>
p1 -> si { MI_b2_val2_eq_0__1 = 0 && INIT_PC32_prime_END' = INIT_PC32_prime_END - 1 && INIT_PC33_prime_END' = INIT_PC33_prime_END + 1 &&
        havoc(INIT_PC32_prime_END, INIT_PC33_prime_END) }

// <INIT_PC33_prime_END> -> 'assert(!b1_val1_eq_0)' <INIT_PC34_prime_END>
p2 -> si { MI_b1_val1_eq_0__1 = 0 && INIT_PC33_prime_END' = INIT_PC33_prime_END - 1 && INIT_PC34_prime_END' = INIT_PC34_prime_END + 1 &&
        havoc(INIT_PC33_prime_END, INIT_PC34_prime_END) }

// <INIT_PC34_prime_END> -> 'assert(!b0_val0_eq_0)' <INIT_PC35_prime_END>
p3 -> si { MI_b0_val0_eq_0__1 = 0 && INIT_PC34_prime_END' = INIT_PC34_prime_END - 1 && INIT_PC35_prime_END' = INIT_PC35_prime_END + 1 &&
        havoc(INIT_PC34_prime_END, INIT_PC35_prime_END) }

// <INIT_PC35_prime_END> -> 'assert (F)'
p4 -> sf { 1 = 1 && INIT_PC35_prime_END' = INIT_PC35_prime_END - 1 && done' = 1 &&
        MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
        havoc(INIT_PC35_prime_END, done) }

// <INIT_PC35_prime_END> -> 'assert (F)' <END_l1_prime_END>
p4 -> si { 1 = 1 && INIT_PC35_prime_END' = INIT_PC35_prime_END - 1 && END_l1_prime_END' = END_l1_prime_END + 1 &&
        havoc(INIT_PC35_prime_END, END_l1_prime_END) }

// <cpost_Xf_with_err> -> 'assert(!b3_val3_eq_0)' <INIT_PC32_prime_END>
p5 -> si { MI_b3_val3_eq_0__1 = 0 && cpost_Xf_with_err' = cpost_Xf_with_err - 1 && INIT_PC32_prime_END' = INIT_PC32_prime_END + 1 &&
        havoc(cpost_Xf_with_err, INIT_PC32_prime_END) }


}

//----------------------------------
// Grammar of cpost_Xf_without_err
// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
// <PC19> -> 'e'
// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
// <PC24> -> 'e'
// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
// <PC29> -> 'b2_val2_eq_0 := T' <l4>
// <PC32> -> 'assert(!b2_val2_eq_0)' <PC33>
// <PC32> -> 'assert(b2_val2_eq_0)' <l1>
// <PC33> -> 'assert(!b1_val1_eq_0)' <PC34>
// <PC33> -> 'assert(b1_val1_eq_0)' <l1>
// <PC34> -> 'assert(b0_val0_eq_0)' <l1>
// <cpost_Xf_without_err> -> 'assert(!b3_val3_eq_0)' <PC32>
// <cpost_Xf_without_err> -> 'assert(b3_val3_eq_0)' <l1>
// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
// <l1> -> 'e'
// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
// <l4> -> 'e'
//----------------------------------
traverse_cpost_Xf_without_err_0 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC17 >= 1 && havoc() }
si -> p1 { PC18 >= 1 && havoc() }
si -> p2 { PC19 >= 1 && havoc() }
si -> p3 { PC21 >= 1 && havoc() }
si -> p4 { PC22 >= 1 && havoc() }
si -> p5 { PC23 >= 1 && havoc() }
si -> p6 { PC24 >= 1 && havoc() }
si -> p7 { PC26 >= 1 && havoc() }
si -> p8 { PC27 >= 1 && havoc() }
si -> p9 { PC28 >= 1 && havoc() }
si -> p10 { PC29 >= 1 && havoc() }
si -> p11 { PC32 >= 1 && havoc() }
si -> p12 { PC33 >= 1 && havoc() }
si -> p13 { PC34 >= 1 && havoc() }
si -> p14 { cpost_Xf_without_err >= 1 && havoc() }
si -> p15 { l1 >= 1 && havoc() }
si -> p16 { l2 >= 1 && havoc() }
si -> p17 { l3 >= 1 && havoc() }
si -> p18 { l4 >= 1 && havoc() }


// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
p0 -> si { MI_b1_val1_eq_0__0' = 0 && PC17' = PC17 - 1 && PC18' = PC18 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC17, PC18) }

// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
p1 -> si { MI_b0_val0_eq_0__0' = 1 && PC18' = PC18 - 1 && PC19' = PC19 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC18, PC19) }

// <PC19> -> 'e'
p2 -> sf { PC19' = PC19 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC19, done) }

// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
p3 -> si { MI_b2_val2_eq_0__0' = 0 && PC21' = PC21 - 1 && PC22' = PC22 + 1 &&
        havoc(MI_b2_val2_eq_0__0, PC21, PC22) }

// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
p4 -> si { MI_b0_val0_eq_0__0' = 1 && PC22' = PC22 - 1 && PC23' = PC23 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC22, PC23) }

// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
p5 -> si { MI_b1_val1_eq_0__0' = 1 && PC23' = PC23 - 1 && PC24' = PC24 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC23, PC24) }

// <PC24> -> 'e'
p6 -> sf { PC24' = PC24 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC24, done) }

// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
p7 -> si { MI_b3_val3_eq_0__0' = 0 && PC26' = PC26 - 1 && PC27' = PC27 + 1 &&
        havoc(MI_b3_val3_eq_0__0, PC26, PC27) }

// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
p8 -> si { MI_b0_val0_eq_0__0' = 1 && PC27' = PC27 - 1 && PC28' = PC28 + 1 &&
        havoc(MI_b0_val0_eq_0__0, PC27, PC28) }

// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
p9 -> si { MI_b1_val1_eq_0__0' = 1 && PC28' = PC28 - 1 && PC29' = PC29 + 1 &&
        havoc(MI_b1_val1_eq_0__0, PC28, PC29) }

// <PC29> -> 'b2_val2_eq_0 := T' <l4>
p10 -> si { MI_b2_val2_eq_0__0' = 1 && PC29' = PC29 - 1 && l4' = l4 + 1 &&
        havoc(MI_b2_val2_eq_0__0, PC29, l4) }

// <PC32> -> 'assert(!b2_val2_eq_0)' <PC33>
p11 -> si { MI_b2_val2_eq_0__0 = 0 && PC32' = PC32 - 1 && PC33' = PC33 + 1 &&
        havoc(PC32, PC33) }

// <PC32> -> 'assert(b2_val2_eq_0)' <l1>
p11 -> si { MI_b2_val2_eq_0__0 = 1 && PC32' = PC32 - 1 && l1' = l1 + 1 &&
        havoc(PC32, l1) }

// <PC33> -> 'assert(!b1_val1_eq_0)' <PC34>
p12 -> si { MI_b1_val1_eq_0__0 = 0 && PC33' = PC33 - 1 && PC34' = PC34 + 1 &&
        havoc(PC33, PC34) }

// <PC33> -> 'assert(b1_val1_eq_0)' <l1>
p12 -> si { MI_b1_val1_eq_0__0 = 1 && PC33' = PC33 - 1 && l1' = l1 + 1 &&
        havoc(PC33, l1) }

// <PC34> -> 'assert(b0_val0_eq_0)' <l1>
p13 -> si { MI_b0_val0_eq_0__0 = 1 && PC34' = PC34 - 1 && l1' = l1 + 1 &&
        havoc(PC34, l1) }

// <cpost_Xf_without_err> -> 'assert(!b3_val3_eq_0)' <PC32>
p14 -> si { MI_b3_val3_eq_0__0 = 0 && cpost_Xf_without_err' = cpost_Xf_without_err - 1 && PC32' = PC32 + 1 &&
        havoc(cpost_Xf_without_err, PC32) }

// <cpost_Xf_without_err> -> 'assert(b3_val3_eq_0)' <l1>
p14 -> si { MI_b3_val3_eq_0__0 = 1 && cpost_Xf_without_err' = cpost_Xf_without_err - 1 && l1' = l1 + 1 &&
        havoc(cpost_Xf_without_err, l1) }

// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
p15 -> si { MI_b1_val1_eq_0__0 = 0 && l1' = l1 - 1 && l2' = l2 + 1 &&
        havoc(l1, l2) }

// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
p15 -> si { MI_b1_val1_eq_0__0 = 1 && l1' = l1 - 1 && PC17' = PC17 + 1 &&
        havoc(l1, PC17) }

// <l1> -> 'e'
p15 -> sf { l1' = l1 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(l1, done) }

// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
p16 -> si { MI_b2_val2_eq_0__0 = 0 && l2' = l2 - 1 && l3' = l3 + 1 &&
        havoc(l2, l3) }

// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
p16 -> si { MI_b2_val2_eq_0__0 = 1 && l2' = l2 - 1 && PC21' = PC21 + 1 &&
        havoc(l2, PC21) }

// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
p17 -> si { MI_b3_val3_eq_0__0 = 0 && l3' = l3 - 1 && l4' = l4 + 1 &&
        havoc(l3, l4) }

// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
p17 -> si { MI_b3_val3_eq_0__0 = 1 && l3' = l3 - 1 && PC26' = PC26 + 1 &&
        havoc(l3, PC26) }

// <l4> -> 'e'
p18 -> sf { l4' = l4 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(l4, done) }


}

//----------------------------------
// Grammar of cpost_Xf_without_err
// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
// <PC19> -> 'e'
// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
// <PC24> -> 'e'
// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
// <PC29> -> 'b2_val2_eq_0 := T' <l4>
// <PC32> -> 'assert(!b2_val2_eq_0)' <PC33>
// <PC32> -> 'assert(b2_val2_eq_0)' <l1>
// <PC33> -> 'assert(!b1_val1_eq_0)' <PC34>
// <PC33> -> 'assert(b1_val1_eq_0)' <l1>
// <PC34> -> 'assert(b0_val0_eq_0)' <l1>
// <cpost_Xf_without_err> -> 'assert(!b3_val3_eq_0)' <PC32>
// <cpost_Xf_without_err> -> 'assert(b3_val3_eq_0)' <l1>
// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
// <l1> -> 'e'
// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
// <l4> -> 'e'
//----------------------------------
traverse_cpost_Xf_without_err_1 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC17 >= 1 && havoc() }
si -> p1 { PC18 >= 1 && havoc() }
si -> p2 { PC19 >= 1 && havoc() }
si -> p3 { PC21 >= 1 && havoc() }
si -> p4 { PC22 >= 1 && havoc() }
si -> p5 { PC23 >= 1 && havoc() }
si -> p6 { PC24 >= 1 && havoc() }
si -> p7 { PC26 >= 1 && havoc() }
si -> p8 { PC27 >= 1 && havoc() }
si -> p9 { PC28 >= 1 && havoc() }
si -> p10 { PC29 >= 1 && havoc() }
si -> p11 { PC32 >= 1 && havoc() }
si -> p12 { PC33 >= 1 && havoc() }
si -> p13 { PC34 >= 1 && havoc() }
si -> p14 { cpost_Xf_without_err >= 1 && havoc() }
si -> p15 { l1 >= 1 && havoc() }
si -> p16 { l2 >= 1 && havoc() }
si -> p17 { l3 >= 1 && havoc() }
si -> p18 { l4 >= 1 && havoc() }


// <PC17> -> 'b1_val1_eq_0 := F' <PC18>
p0 -> si { MI_b1_val1_eq_0__1' = 0 && PC17' = PC17 - 1 && PC18' = PC18 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC17, PC18) }

// <PC18> -> 'b0_val0_eq_0 := T' <PC19>
p1 -> si { MI_b0_val0_eq_0__1' = 1 && PC18' = PC18 - 1 && PC19' = PC19 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC18, PC19) }

// <PC19> -> 'e'
p2 -> sf { PC19' = PC19 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC19, done) }

// <PC21> -> 'b2_val2_eq_0 := F' <PC22>
p3 -> si { MI_b2_val2_eq_0__1' = 0 && PC21' = PC21 - 1 && PC22' = PC22 + 1 &&
        havoc(MI_b2_val2_eq_0__1, PC21, PC22) }

// <PC22> -> 'b0_val0_eq_0 := T' <PC23>
p4 -> si { MI_b0_val0_eq_0__1' = 1 && PC22' = PC22 - 1 && PC23' = PC23 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC22, PC23) }

// <PC23> -> 'b1_val1_eq_0 := T' <PC24>
p5 -> si { MI_b1_val1_eq_0__1' = 1 && PC23' = PC23 - 1 && PC24' = PC24 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC23, PC24) }

// <PC24> -> 'e'
p6 -> sf { PC24' = PC24 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC24, done) }

// <PC26> -> 'b3_val3_eq_0 := F' <PC27>
p7 -> si { MI_b3_val3_eq_0__1' = 0 && PC26' = PC26 - 1 && PC27' = PC27 + 1 &&
        havoc(MI_b3_val3_eq_0__1, PC26, PC27) }

// <PC27> -> 'b0_val0_eq_0 := T' <PC28>
p8 -> si { MI_b0_val0_eq_0__1' = 1 && PC27' = PC27 - 1 && PC28' = PC28 + 1 &&
        havoc(MI_b0_val0_eq_0__1, PC27, PC28) }

// <PC28> -> 'b1_val1_eq_0 := T' <PC29>
p9 -> si { MI_b1_val1_eq_0__1' = 1 && PC28' = PC28 - 1 && PC29' = PC29 + 1 &&
        havoc(MI_b1_val1_eq_0__1, PC28, PC29) }

// <PC29> -> 'b2_val2_eq_0 := T' <l4>
p10 -> si { MI_b2_val2_eq_0__1' = 1 && PC29' = PC29 - 1 && l4' = l4 + 1 &&
        havoc(MI_b2_val2_eq_0__1, PC29, l4) }

// <PC32> -> 'assert(!b2_val2_eq_0)' <PC33>
p11 -> si { MI_b2_val2_eq_0__1 = 0 && PC32' = PC32 - 1 && PC33' = PC33 + 1 &&
        havoc(PC32, PC33) }

// <PC32> -> 'assert(b2_val2_eq_0)' <l1>
p11 -> si { MI_b2_val2_eq_0__1 = 1 && PC32' = PC32 - 1 && l1' = l1 + 1 &&
        havoc(PC32, l1) }

// <PC33> -> 'assert(!b1_val1_eq_0)' <PC34>
p12 -> si { MI_b1_val1_eq_0__1 = 0 && PC33' = PC33 - 1 && PC34' = PC34 + 1 &&
        havoc(PC33, PC34) }

// <PC33> -> 'assert(b1_val1_eq_0)' <l1>
p12 -> si { MI_b1_val1_eq_0__1 = 1 && PC33' = PC33 - 1 && l1' = l1 + 1 &&
        havoc(PC33, l1) }

// <PC34> -> 'assert(b0_val0_eq_0)' <l1>
p13 -> si { MI_b0_val0_eq_0__1 = 1 && PC34' = PC34 - 1 && l1' = l1 + 1 &&
        havoc(PC34, l1) }

// <cpost_Xf_without_err> -> 'assert(!b3_val3_eq_0)' <PC32>
p14 -> si { MI_b3_val3_eq_0__1 = 0 && cpost_Xf_without_err' = cpost_Xf_without_err - 1 && PC32' = PC32 + 1 &&
        havoc(cpost_Xf_without_err, PC32) }

// <cpost_Xf_without_err> -> 'assert(b3_val3_eq_0)' <l1>
p14 -> si { MI_b3_val3_eq_0__1 = 1 && cpost_Xf_without_err' = cpost_Xf_without_err - 1 && l1' = l1 + 1 &&
        havoc(cpost_Xf_without_err, l1) }

// <l1> -> 'assert(!b1_val1_eq_0)' <l2>
p15 -> si { MI_b1_val1_eq_0__1 = 0 && l1' = l1 - 1 && l2' = l2 + 1 &&
        havoc(l1, l2) }

// <l1> -> 'assert(b1_val1_eq_0)' <PC17>
p15 -> si { MI_b1_val1_eq_0__1 = 1 && l1' = l1 - 1 && PC17' = PC17 + 1 &&
        havoc(l1, PC17) }

// <l1> -> 'e'
p15 -> sf { l1' = l1 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(l1, done) }

// <l2> -> 'assert(!b2_val2_eq_0)' <l3>
p16 -> si { MI_b2_val2_eq_0__1 = 0 && l2' = l2 - 1 && l3' = l3 + 1 &&
        havoc(l2, l3) }

// <l2> -> 'assert(b2_val2_eq_0)' <PC21>
p16 -> si { MI_b2_val2_eq_0__1 = 1 && l2' = l2 - 1 && PC21' = PC21 + 1 &&
        havoc(l2, PC21) }

// <l3> -> 'assert(!b3_val3_eq_0)' <l4>
p17 -> si { MI_b3_val3_eq_0__1 = 0 && l3' = l3 - 1 && l4' = l4 + 1 &&
        havoc(l3, l4) }

// <l3> -> 'assert(b3_val3_eq_0)' <PC26>
p17 -> si { MI_b3_val3_eq_0__1 = 1 && l3' = l3 - 1 && PC26' = PC26 + 1 &&
        havoc(l3, PC26) }

// <l4> -> 'e'
p18 -> sf { l4' = l4 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(l4, done) }


}

//----------------------------------
// Grammar of cpost_X4_without_err
// <PC38> -> <cX3> <PC39>
// <PC39> -> 'e'
// <PC41> -> 'e'
// <PC43> -> <cX0> <PC44>
// <PC44> -> 'e'
// <PC46> -> <cX1> <PC47>
// <PC47> -> 'e'
// <PC49> -> <cX2> <PC50>
// <PC50> -> 'e'
// <cX0> -> 'cpost_A' <PC41>
// <cX1> -> <cX0> <PC43>
// <cX2> -> <cX1> <PC46>
// <cX3> -> <cX2> <PC49>
// <cpost_X4_without_err> -> <cX3> <PC38>
//----------------------------------
traverse_cpost_X4_without_err_0 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC38 >= 1 && havoc() }
si -> p1 { PC39 >= 1 && havoc() }
si -> p2 { PC41 >= 1 && havoc() }
si -> p3 { PC43 >= 1 && havoc() }
si -> p4 { PC44 >= 1 && havoc() }
si -> p5 { PC46 >= 1 && havoc() }
si -> p6 { PC47 >= 1 && havoc() }
si -> p7 { PC49 >= 1 && havoc() }
si -> p8 { PC50 >= 1 && havoc() }
si -> p9 { cX0 >= 1 && havoc() }
si -> p10 { cX1 >= 1 && havoc() }
si -> p11 { cX2 >= 1 && havoc() }
si -> p12 { cX3 >= 1 && havoc() }
si -> p13 { cpost_X4_without_err >= 1 && havoc() }


// <PC38> -> <cX3> <PC39> 
p0 -> p0_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC38' = PC38 - 1 && PC39' = PC39 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC38, PC39) }

p0_0 -> si0_0 { res' = 1 && havoc(res) }

si0_0 -> si { res = 1 && res' = 0 && cX3' = cX3 + 1 && 
        havoc(res, cX3) }

p0 -> p0_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC38' = PC38 - 1 && cX3' = cX3 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC38, cX3) }

p0_1 -> si0_1 { res' = 1 &&  havoc(res) }

si0_1 -> si { res = 1 && res' = 0 && PC39' = PC39 + 1 &&
        havoc(res, PC39) }

// <PC39> -> 'e'
p1 -> sf { PC39' = PC39 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC39, done) }

// <PC41> -> 'e'
p2 -> sf { PC41' = PC41 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC41, done) }

// <PC43> -> <cX0> <PC44> 
p3 -> p3_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC43' = PC43 - 1 && PC44' = PC44 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC43, PC44) }

p3_0 -> si3_0 { res' = 1 && havoc(res) }

si3_0 -> si { res = 1 && res' = 0 && cX0' = cX0 + 1 && 
        havoc(res, cX0) }

p3 -> p3_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC43' = PC43 - 1 && cX0' = cX0 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC43, cX0) }

p3_1 -> si3_1 { res' = 1 &&  havoc(res) }

si3_1 -> si { res = 1 && res' = 0 && PC44' = PC44 + 1 &&
        havoc(res, PC44) }

// <PC44> -> 'e'
p4 -> sf { PC44' = PC44 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC44, done) }

// <PC46> -> <cX1> <PC47> 
p5 -> p5_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC46' = PC46 - 1 && PC47' = PC47 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC46, PC47) }

p5_0 -> si5_0 { res' = 1 && havoc(res) }

si5_0 -> si { res = 1 && res' = 0 && cX1' = cX1 + 1 && 
        havoc(res, cX1) }

p5 -> p5_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC46' = PC46 - 1 && cX1' = cX1 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC46, cX1) }

p5_1 -> si5_1 { res' = 1 &&  havoc(res) }

si5_1 -> si { res = 1 && res' = 0 && PC47' = PC47 + 1 &&
        havoc(res, PC47) }

// <PC47> -> 'e'
p6 -> sf { PC47' = PC47 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC47, done) }

// <PC49> -> <cX2> <PC50> 
p7 -> p7_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC49' = PC49 - 1 && PC50' = PC50 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC49, PC50) }

p7_0 -> si7_0 { res' = 1 && havoc(res) }

si7_0 -> si { res = 1 && res' = 0 && cX2' = cX2 + 1 && 
        havoc(res, cX2) }

p7 -> p7_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC49' = PC49 - 1 && cX2' = cX2 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC49, cX2) }

p7_1 -> si7_1 { res' = 1 &&  havoc(res) }

si7_1 -> si { res = 1 && res' = 0 && PC50' = PC50 + 1 &&
        havoc(res, PC50) }

// <PC50> -> 'e'
p8 -> sf { PC50' = PC50 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__0 = MF_b0_val0_eq_0__0 && MI_b1_val1_eq_0__0 = MF_b1_val1_eq_0__0 && MI_b2_val2_eq_0__0 = MF_b2_val2_eq_0__0 && MI_b3_val3_eq_0__0 = MF_b3_val3_eq_0__0 && 
       	havoc(PC50, done) }

// <cX0> -> 'cpost_A' <PC41>
p9 -> si { CNT_cpost_A' = CNT_cpost_A + 1  && cX0' = cX0 - 1 && PC41' = PC41 + 1 &&
        havoc(CNT_cpost_A, cX0, PC41) }

// <cX1> -> <cX0> <PC43> 
p10 -> p10_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cX1' = cX1 - 1 && PC43' = PC43 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cX1, PC43) }

p10_0 -> si10_0 { res' = 1 && havoc(res) }

si10_0 -> si { res = 1 && res' = 0 && cX0' = cX0 + 1 && 
        havoc(res, cX0) }

p10 -> p10_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cX1' = cX1 - 1 && cX0' = cX0 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cX1, cX0) }

p10_1 -> si10_1 { res' = 1 &&  havoc(res) }

si10_1 -> si { res = 1 && res' = 0 && PC43' = PC43 + 1 &&
        havoc(res, PC43) }

// <cX2> -> <cX1> <PC46> 
p11 -> p11_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cX2' = cX2 - 1 && PC46' = PC46 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cX2, PC46) }

p11_0 -> si11_0 { res' = 1 && havoc(res) }

si11_0 -> si { res = 1 && res' = 0 && cX1' = cX1 + 1 && 
        havoc(res, cX1) }

p11 -> p11_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cX2' = cX2 - 1 && cX1' = cX1 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cX2, cX1) }

p11_1 -> si11_1 { res' = 1 &&  havoc(res) }

si11_1 -> si { res = 1 && res' = 0 && PC46' = PC46 + 1 &&
        havoc(res, PC46) }

// <cX3> -> <cX2> <PC49> 
p12 -> p12_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cX3' = cX3 - 1 && PC49' = PC49 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cX3, PC49) }

p12_0 -> si12_0 { res' = 1 && havoc(res) }

si12_0 -> si { res = 1 && res' = 0 && cX2' = cX2 + 1 && 
        havoc(res, cX2) }

p12 -> p12_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cX3' = cX3 - 1 && cX2' = cX2 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cX3, cX2) }

p12_1 -> si12_1 { res' = 1 &&  havoc(res) }

si12_1 -> si { res = 1 && res' = 0 && PC49' = PC49 + 1 &&
        havoc(res, PC49) }

// <cpost_X4_without_err> -> <cX3> <PC38> 
p13 -> p13_0 {0 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0 && MF_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0 && MF_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0 && MF_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0 && MF_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cpost_X4_without_err' = cpost_X4_without_err - 1 && PC38' = PC38 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cpost_X4_without_err, PC38) }

p13_0 -> si13_0 { res' = 1 && havoc(res) }

si13_0 -> si { res = 1 && res' = 0 && cX3' = cX3 + 1 && 
        havoc(res, cX3) }

p13 -> p13_1 {0 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__0 && MI_b0_val0_eq_0__0' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__0 && MI_b1_val1_eq_0__0' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__0 && MI_b2_val2_eq_0__0' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__0 && MI_b3_val3_eq_0__0' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cpost_X4_without_err' = cpost_X4_without_err - 1 && cX3' = cX3 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cpost_X4_without_err, cX3) }

p13_1 -> si13_1 { res' = 1 &&  havoc(res) }

si13_1 -> si { res = 1 && res' = 0 && PC38' = PC38 + 1 &&
        havoc(res, PC38) }


}

//----------------------------------
// Grammar of cpost_X4_without_err
// <PC38> -> <cX3> <PC39>
// <PC39> -> 'e'
// <PC41> -> 'e'
// <PC43> -> <cX0> <PC44>
// <PC44> -> 'e'
// <PC46> -> <cX1> <PC47>
// <PC47> -> 'e'
// <PC49> -> <cX2> <PC50>
// <PC50> -> 'e'
// <cX0> -> 'cpost_A' <PC41>
// <cX1> -> <cX0> <PC43>
// <cX2> -> <cX1> <PC46>
// <cX3> -> <cX2> <PC49>
// <cpost_X4_without_err> -> <cX3> <PC38>
//----------------------------------
traverse_cpost_X4_without_err_1 {
res: int;
out done: int;
initial si;
final sf;

si -> p0 { PC38 >= 1 && havoc() }
si -> p1 { PC39 >= 1 && havoc() }
si -> p2 { PC41 >= 1 && havoc() }
si -> p3 { PC43 >= 1 && havoc() }
si -> p4 { PC44 >= 1 && havoc() }
si -> p5 { PC46 >= 1 && havoc() }
si -> p6 { PC47 >= 1 && havoc() }
si -> p7 { PC49 >= 1 && havoc() }
si -> p8 { PC50 >= 1 && havoc() }
si -> p9 { cX0 >= 1 && havoc() }
si -> p10 { cX1 >= 1 && havoc() }
si -> p11 { cX2 >= 1 && havoc() }
si -> p12 { cX3 >= 1 && havoc() }
si -> p13 { cpost_X4_without_err >= 1 && havoc() }


// <PC38> -> <cX3> <PC39> 
p0 -> p0_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC38' = PC38 - 1 && PC39' = PC39 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC38, PC39) }

p0_0 -> si0_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si0_0 -> si { res = 1 && res' = 0 && cX3' = cX3 + 1 && 
        havoc(res, cX3) }

p0 -> p0_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC38' = PC38 - 1 && cX3' = cX3 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC38, cX3) }

p0_1 -> si0_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si0_1 -> si { res = 1 && res' = 0 && PC39' = PC39 + 1 &&
        havoc(res, PC39) }

// <PC39> -> 'e'
p1 -> sf { PC39' = PC39 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC39, done) }

// <PC41> -> 'e'
p2 -> sf { PC41' = PC41 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC41, done) }

// <PC43> -> <cX0> <PC44> 
p3 -> p3_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC43' = PC43 - 1 && PC44' = PC44 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC43, PC44) }

p3_0 -> si3_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si3_0 -> si { res = 1 && res' = 0 && cX0' = cX0 + 1 && 
        havoc(res, cX0) }

p3 -> p3_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC43' = PC43 - 1 && cX0' = cX0 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC43, cX0) }

p3_1 -> si3_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si3_1 -> si { res = 1 && res' = 0 && PC44' = PC44 + 1 &&
        havoc(res, PC44) }

// <PC44> -> 'e'
p4 -> sf { PC44' = PC44 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC44, done) }

// <PC46> -> <cX1> <PC47> 
p5 -> p5_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC46' = PC46 - 1 && PC47' = PC47 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC46, PC47) }

p5_0 -> si5_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si5_0 -> si { res = 1 && res' = 0 && cX1' = cX1 + 1 && 
        havoc(res, cX1) }

p5 -> p5_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC46' = PC46 - 1 && cX1' = cX1 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC46, cX1) }

p5_1 -> si5_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si5_1 -> si { res = 1 && res' = 0 && PC47' = PC47 + 1 &&
        havoc(res, PC47) }

// <PC47> -> 'e'
p6 -> sf { PC47' = PC47 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC47, done) }

// <PC49> -> <cX2> <PC50> 
p7 -> p7_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        PC49' = PC49 - 1 && PC50' = PC50 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  PC49, PC50) }

p7_0 -> si7_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si7_0 -> si { res = 1 && res' = 0 && cX2' = cX2 + 1 && 
        havoc(res, cX2) }

p7 -> p7_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        PC49' = PC49 - 1 && cX2' = cX2 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  PC49, cX2) }

p7_1 -> si7_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si7_1 -> si { res = 1 && res' = 0 && PC50' = PC50 + 1 &&
        havoc(res, PC50) }

// <PC50> -> 'e'
p8 -> sf { PC50' = PC50 - 1 && done' = 1 &&
       	MI_b0_val0_eq_0__1 = MF_b0_val0_eq_0__1 && MI_b1_val1_eq_0__1 = MF_b1_val1_eq_0__1 && MI_b2_val2_eq_0__1 = MF_b2_val2_eq_0__1 && MI_b3_val3_eq_0__1 = MF_b3_val3_eq_0__1 && 
       	havoc(PC50, done) }

// <cX0> -> 'cpost_A' <PC41>
p9 -> si { CNT_cpost_A' = CNT_cpost_A + 1  && cX0' = cX0 - 1 && PC41' = PC41 + 1 &&
        havoc(CNT_cpost_A, cX0, PC41) }

// <cX1> -> <cX0> <PC43> 
p10 -> p10_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cX1' = cX1 - 1 && PC43' = PC43 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cX1, PC43) }

p10_0 -> si10_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si10_0 -> si { res = 1 && res' = 0 && cX0' = cX0 + 1 && 
        havoc(res, cX0) }

p10 -> p10_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cX1' = cX1 - 1 && cX0' = cX0 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cX1, cX0) }

p10_1 -> si10_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si10_1 -> si { res = 1 && res' = 0 && PC43' = PC43 + 1 &&
        havoc(res, PC43) }

// <cX2> -> <cX1> <PC46> 
p11 -> p11_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cX2' = cX2 - 1 && PC46' = PC46 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cX2, PC46) }

p11_0 -> si11_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si11_0 -> si { res = 1 && res' = 0 && cX1' = cX1 + 1 && 
        havoc(res, cX1) }

p11 -> p11_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cX2' = cX2 - 1 && cX1' = cX1 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cX2, cX1) }

p11_1 -> si11_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si11_1 -> si { res = 1 && res' = 0 && PC46' = PC46 + 1 &&
        havoc(res, PC46) }

// <cX3> -> <cX2> <PC49> 
p12 -> p12_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cX3' = cX3 - 1 && PC49' = PC49 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cX3, PC49) }

p12_0 -> si12_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si12_0 -> si { res = 1 && res' = 0 && cX2' = cX2 + 1 && 
        havoc(res, cX2) }

p12 -> p12_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cX3' = cX3 - 1 && cX2' = cX2 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cX3, cX2) }

p12_1 -> si12_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si12_1 -> si { res = 1 && res' = 0 && PC49' = PC49 + 1 &&
        havoc(res, PC49) }

// <cpost_X4_without_err> -> <cX3> <PC38> 
p13 -> p13_0 {1 >= 1 &&
        MF_b0_val0_eq_0__0' = MF_b0_val0_eq_0__1 && MF_b0_val0_eq_0__1' = MI_b0_val0_eq_0__0' && MI_b0_val0_eq_0__0' >= 0 && MI_b0_val0_eq_0__0' <= 1 && MF_b1_val1_eq_0__0' = MF_b1_val1_eq_0__1 && MF_b1_val1_eq_0__1' = MI_b1_val1_eq_0__0' && MI_b1_val1_eq_0__0' >= 0 && MI_b1_val1_eq_0__0' <= 1 && MF_b2_val2_eq_0__0' = MF_b2_val2_eq_0__1 && MF_b2_val2_eq_0__1' = MI_b2_val2_eq_0__0' && MI_b2_val2_eq_0__0' >= 0 && MI_b2_val2_eq_0__0' <= 1 && MF_b3_val3_eq_0__0' = MF_b3_val3_eq_0__1 && MF_b3_val3_eq_0__1' = MI_b3_val3_eq_0__0' && MI_b3_val3_eq_0__0' >= 0 && MI_b3_val3_eq_0__0' <= 1 && 
        cpost_X4_without_err' = cpost_X4_without_err - 1 && PC38' = PC38 + 1 &&
        havoc(MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0, MF_b0_val0_eq_0__1, MF_b1_val1_eq_0__1, MF_b2_val2_eq_0__1, MF_b3_val3_eq_0__1, MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0,  cpost_X4_without_err, PC38) }

p13_0 -> si13_0 { res' = traverse_cpost_X4_without_err_0() && havoc(res) }

si13_0 -> si { res = 1 && res' = 0 && cX3' = cX3 + 1 && 
        havoc(res, cX3) }

p13 -> p13_1 {1 >= 1 &&
        MI_b0_val0_eq_0__0' = MI_b0_val0_eq_0__1 && MI_b0_val0_eq_0__1' = MF_b0_val0_eq_0__0' && MF_b0_val0_eq_0__0' >= 0 && MF_b0_val0_eq_0__0' <= 1 && MI_b1_val1_eq_0__0' = MI_b1_val1_eq_0__1 && MI_b1_val1_eq_0__1' = MF_b1_val1_eq_0__0' && MF_b1_val1_eq_0__0' >= 0 && MF_b1_val1_eq_0__0' <= 1 && MI_b2_val2_eq_0__0' = MI_b2_val2_eq_0__1 && MI_b2_val2_eq_0__1' = MF_b2_val2_eq_0__0' && MF_b2_val2_eq_0__0' >= 0 && MF_b2_val2_eq_0__0' <= 1 && MI_b3_val3_eq_0__0' = MI_b3_val3_eq_0__1 && MI_b3_val3_eq_0__1' = MF_b3_val3_eq_0__0' && MF_b3_val3_eq_0__0' >= 0 && MF_b3_val3_eq_0__0' <= 1 && 
        cpost_X4_without_err' = cpost_X4_without_err - 1 && cX3' = cX3 + 1 &&
        havoc(MI_b0_val0_eq_0__0, MI_b1_val1_eq_0__0, MI_b2_val2_eq_0__0, MI_b3_val3_eq_0__0, MI_b0_val0_eq_0__1, MI_b1_val1_eq_0__1, MI_b2_val2_eq_0__1, MI_b3_val3_eq_0__1, MF_b0_val0_eq_0__0, MF_b1_val1_eq_0__0, MF_b2_val2_eq_0__0, MF_b3_val3_eq_0__0,  cpost_X4_without_err, cX3) }

p13_1 -> si13_1 { res' = traverse_cpost_X4_without_err_0() &&  havoc(res) }

si13_1 -> si { res = 1 && res' = 0 && PC38' = PC38 + 1 &&
        havoc(res, PC38) }


}


