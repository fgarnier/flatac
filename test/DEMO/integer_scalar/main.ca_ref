nts main;
 
main{

__nts__naffected_ret_val_,validity____nts__naffected_ret_val__,validity____retres_,validity__i_,validity__tmp_,validity__tmp_0_,validity__x_,__ndet_cond__,__if_ndet_cond__,_ndet_arg_3,_ndet_arg_2,_ndet_arg_1,_ndet_arg_0,__retres,tmp_0,tmp,i,x : int ;

 out ret_val_, validity__ret_val__  : int;
initial sinit ;
final s16;
error s1,s7,s10,s12,s14,s17; sinit->s0 {  } 
 s0->s2 { i'=0 and havoc(i) } 
 s2->s3 { havoc() } 
 s3->s4 { havoc() } 
 s4->s5 { i < 100 and havoc() } 
 s4->s6 { i >= 100 and havoc() } 
 s5->sinter0 { havoc() } 
 sinter0->s8 { (tmp',validity__tmp_')=foo(i,1,2*i+1,1,3*i+5,1) and havoc(tmp,validity__tmp_) } 
 s6->s9 { havoc() } 
 s8->sinter1 { havoc() } 
 sinter1->s11 { (tmp_0',validity__tmp_0_')=bar(5*i+1,1,7*i+2,1,9*i+3,1) and havoc(tmp_0,validity__tmp_0_) } 
 s9->s13 { __retres'=0 and havoc(__retres) } 
 s11->s15 { x'=tmp+tmp_0 and havoc(x) } 
 s13->s16 { ret_val_'=__retres and havoc(ret_val_) } 
 s15->s18 { i'=i+1 and havoc(i) } 
 s18->s3 { havoc() }
}
foo{
in z,validity__z_,y,validity__y_,x,validity__x_ : int;

__nts__naffected_ret_val_,validity____nts__naffected_ret_val__,validity____retres_,__ndet_cond__,__if_ndet_cond__,_ndet_arg_0,__retres : int ;

 out ret_val_, validity__ret_val__  : int;
initial sinit ;
final s3;
error s1; sinit->s0 {  } 
 s0->s2 { __retres'=5*((x+12)*(3*y+7*z+1)) and havoc(__retres) } 
 s2->s3 { ret_val_'=__retres and havoc(ret_val_) }
}
bar{
in z,validity__z_,y,validity__y_,x,validity__x_ : int;

__nts__naffected_ret_val_,validity____nts__naffected_ret_val__,validity____retres_,validity__m_,validity__n_,validity__p_,__ndet_cond__,__if_ndet_cond__,_ndet_arg_0,__retres,p,n,m : int ;

 out ret_val_, validity__ret_val__  : int;
initial sinit ;
final s17;
error s1,s11,s13,s15; sinit->s0 {  } 
 s0->s2 { p'=0 and havoc(p) } 
 s2->s3 { havoc() } 
 s3->s4 { havoc() } 
 s4->s5 { x > 0 and havoc() } 
 s4->s6 { x <=  0 and havoc() } 
 s5->s7 { havoc() } 
 s6->s8 { havoc() } 
 s7->s9 { x < y+z and havoc() } 
 s7->s10 { x >= y+z and havoc() } 
 s8->s12 { __retres'=3*m+5*(n-1)+7*(p-2)+11 and havoc(__retres) } 
 s9->s14 { m'=m+9*(x+y)+12 and 2*y > 3*y+z and havoc(m) } 
 s9->s16 { n'=n-(m+5*x+11*y) and 2*y <=  3*y+z and havoc(n) } 
 s10->s8 { havoc() } 
 s12->s17 { ret_val_'=__retres and havoc(ret_val_) } 
 s14->s3 { havoc() } 
 s16->s3 { havoc() }
}
__assert_fail{
in a,b,c,d,e,f,g,h : int;
initial sinit ;
error s0;
sinit->s0 { true and havoc() }
}

NonDetInt{
out ndet, validity_ndet_: int;
initial sinit;
final s1;

sinit->s0{ havoc(ndet,  validity_ndet_)}
s0->s1{havoc()}

}

__VERIFIER_nondet_int{
out ndet, validity_ndet_: int;
initial sinit;
final s1;

sinit->s0{ havoc(ndet,  validity_ndet_)}
s0->s1{havoc()}

}

__NdetValInRange {
 out ndval, ndvalid : int;
 in lowerb, lbval, upperb, upbval : int;
 initial sinit;
 final s1;

 sinit->s1 { ndval' <= upperb and ndval' >= lowerb and ndvalid'=1 and havoc(ndval, ndvalid) }

}
