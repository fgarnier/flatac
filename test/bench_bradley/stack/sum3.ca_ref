nts bench_bradley/stack/sum3;
 
sum3{
in c,validity__c_,b,validity__b_,a,validity__a_ : int;

__nts__naffected_ret_val_,validity____nts__naffected_ret_val__,validity__sum_,__ndet_cond__,__if_ndet_cond__,_ndet_arg_0,sum : int ;

 out ret_val_, validity__ret_val__  : int;
initial sinit ;
final s5;
error s1,s3; sinit->s0 {  } 
 s0->s2 { sum'=0 and havoc(sum) } 
 s2->s4 { sum'=a+b+c and havoc(sum) } 
 s4->s5 { ret_val_'=sum and havoc(ret_val_) }
}
main{
in offset__argv_,validity__argv_,argc,validity__argc_ : int;

__nts__naffected_ret_val_,validity____nts__naffected_ret_val__,validity____retres_,validity__x_,__ndet_cond__,__if_ndet_cond__,_ndet_arg_3,_ndet_arg_2,_ndet_arg_1,_ndet_arg_0,__retres,x : int ;

 out ret_val_, validity__ret_val__  : int;
initial sinit ;
final s9;
error s1,s3,s5,s7; sinit->s0 {  } 
 s0->s2 { x'=1 and havoc(x) } 
 s2->sinter0 { havoc() } 
 sinter0->s4 { (x',validity__x_')=sum3(x,1,x,1,x,1) and havoc(x,validity__x_) } 
 s4->sinter1 { havoc() } 
 sinter1->s6 { (x',validity__x_')=sum3(x,1,x,1,x,1) and havoc(x,validity__x_) } 
 s6->s8 { __retres'=0 and havoc(__retres) } 
 s8->s9 { ret_val_'=__retres and havoc(ret_val_) }
}
