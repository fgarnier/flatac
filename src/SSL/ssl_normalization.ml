open Union_find
open List
open Hashtbl
open Ssl_types
open Ssl
open Ssl_types.SSL_lex
open Ssl_substitution



(** That is used to collect each theories generated by each ptrvar *)
 let all_aff_fold_to_theory _ (lvars : (locvar , unit) t ) (list_of_eq : SSL_lex.eq list) =
     (unify_eq lvars ) @ list_of_eq

(** Removal of uninstanciated existancially quantified variables of
a SSL formula *)

let var_elim ( sslf : ssl_formula ) =
  let iter_elim lvar () =
    if (ssl_contains_locvar lvar sslf  ) == false
    then Hashtbl.remove sslf.quant_vars lvar
    else ()
  in
  Hashtbl.iter iter_elim sslf.quant_vars
    
let theories_cleanup (sslf : ssl_formula ) =
  sslf.pure.equations = []
 

let normalize_ssl ( sslf : ssl_formula ) =
  let theories = (Hashtbl.fold all_aff_fold_to_theory sslf.pure.affectations []) in
  let part = eqlist_to_partition theories in
  let subst_test = subst_from_partition part in
  let after_subst_formula = subst_agains_ssl subst_test sslf in
  var_elim after_subst_formula; theories_cleanup after_subst_formula
  
  


